<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
         version="3.1">


    <!--配置Spring的监听器，默认只加载WEB-INF目录下的applicationContext.xml配置文件-->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>
    <!-- 在controller（SpringMVC）中能成功的调用service（Spring）对象中的方法。-->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>classpath:applicationContext.xml</param-value>
    </context-param>
    <!-- 解决从页面返回后台中文乱码问题 -->
    <filter>
        <filter-name>encodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>encodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <!-- 配置核心控制器 -->
    <servlet>
        <servlet-name>dispatcherServlet</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <!-- springmvc配置文件加载路径
             1）默认情况下，读取WEB-INF下面的文件
             2）可以改为加载类路径下（resources目录），加上classpath:
         -->
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:springmvc.xml</param-value>
        </init-param>
        <!--
           DispatcherServlet对象创建时间问题
              1）默认情况下，第一次访问该Servlet的创建对象，意味着在这个时间才去加载springMVC.xml
              2）可以改变为在项目启动时候就创建该Servlet，提高用户访问体验。
                  <load-on-startup>1</load-on-startup>
                        数值越大，对象创建优先级越低！ （数值越低，越先创建）
        -->
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>dispatcherServlet</servlet-name>
        <!--/ 匹配所有的请求；（不包括.jsp）-->
        <!--/* 匹配所有的请求；（包括.jsp）-->
        <!--*.do拦截以do结尾的请求-->
        <url-pattern>/</url-pattern>
    </servlet-mapping>

<!--&lt;!&ndash;    配置欢迎页面&ndash;&gt;-->
<!--      <welcome-file-list>-->
<!--        <welcome-file>index.jsp</welcome-file>-->
<!--      </welcome-file-list>-->
</web-app>